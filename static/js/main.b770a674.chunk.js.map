{"version":3,"sources":["assets/images/loginImg.png","assets/images/main.png","assets/images/newMovieImg.png","assets/images/editMovieImg.png","context/AuthContext.js","components/PrivateRoute/PrivateRoute.js","services/api.js","services/login.js","services/movies.js","components/Form/LoginForm.js","components/Title/Title.js","pages/Login/Login.js","pages/Main/Main.js","components/Dropzone/Dropzone.js","components/Form/NewMovieForm.js","pages/NewMovie/NewMovie.js","pages/MovieList/MovieList.js","components/Form/EditMovieForm.js","pages/EditMovie/EditMovie.js","App.js","index.js"],"names":["module","exports","AuthContext","createContext","AuthProvider","children","useState","isAuth","setIsAuth","Provider","value","PrivateRoute","Component","component","rest","useContext","render","props","to","api","loginUser","data","fetch","apiOrigin","method","headers","body","JSON","stringify","then","res","json","getMovies","authToken","Authorization","updateMovie","movieId","movieData","Form","useForm","register","handleSubmit","errors","history","useHistory","onSubmit","a","result","jwt","localStorage","setItem","getItem","length","push","console","log","className","htmlFor","type","name","ref","required","identifier","password","Title","Login","LoginForm","src","LoginImg","alt","Main","onClick","MainImg","baseStyle","width","height","display","justifyContent","alignItems","borderWidth","borderStyle","borderColor","borderRadius","marginTop","fontStyle","fontWeight","fontSize","lineHeight","color","outline","transition","activeStyle","acceptStyle","rejectStyle","Dropzone","files","setFiles","poster","useDropzone","accept","noClick","noKeyboard","onDrop","acceptedFiles","map","file","Object","assign","URL","createObjectURL","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","useEffect","forEach","revokeObjectURL","preview","thumbs","key","url","NewMovieForm","formData","FormData","stringData","title","year","append","goBack","NewMovie","NewMovieImg","MovieList","movies","setMovies","handleDelete","id","filter","movie","pathname","state","handleEdit","EditMovieForm","setData","handleChange","e","target","onChange","EditMovie","location","EditMovieImg","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b770a674.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loginImg.79dde563.png\";","module.exports = __webpack_public_path__ + \"static/media/main.e4ce87c1.png\";","module.exports = __webpack_public_path__ + \"static/media/newMovieImg.bb3bf03d.png\";","module.exports = __webpack_public_path__ + \"static/media/editMovieImg.8827b264.png\";","import React, { createContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [isAuth, setIsAuth] = useState('pending');\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuth, setIsAuth }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuth ? <Component {...props} /> : <Redirect to='/' />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","const api = 'https://zm-job-application.herokuapp.com';\r\n\r\nexport default api;\r\n","import apiOrigin from './api';\r\n\r\nexport const loginUser = (data) => {\r\n  return fetch(`${apiOrigin}/auth/local`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  }).then((res) => res.json());\r\n};\r\n","import apiOrigin from './api';\r\n\r\nexport const getMovies = (authToken) => {\r\n  return fetch(`${apiOrigin}/movies`, {\r\n    headers: {\r\n      Authorization: `Bearer ${authToken}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const createMovie = (authToken, movieData) => {\r\n  return fetch(`${apiOrigin}/movies`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${authToken}`,\r\n    },\r\n    body: movieData,\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const deleteMovie = (authToken, movieId) => {\r\n  return fetch(`${apiOrigin}/movies/${movieId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: `Bearer ${authToken}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateMovie = (authToken, movieId, movieData) => {\r\n  return fetch(`${apiOrigin}/movies/${movieId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Authorization: `Bearer ${authToken}`,\r\n    },\r\n    body: movieData,\r\n  }).then((res) => res.json());\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Form.css';\r\nimport { loginUser } from '../../services/login';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { getMovies } from '../../services/movies';\r\n\r\nconst Form = () => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const history = useHistory();\r\n  const { setIsAuth } = useContext(AuthContext);\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const result = await loginUser(data);\r\n      if (result.jwt) {\r\n        localStorage.setItem('token', result.jwt);\r\n        setIsAuth(true);\r\n        getMovies(localStorage.getItem('token')).then((res) => {\r\n          if (res.length > 0) {\r\n            history.push('/movieList');\r\n          } else {\r\n            history.push('/main');\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className='form' onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='form-row'>\r\n          <label htmlFor='identifier' className='form-label'>\r\n            Email*\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='identifier'\r\n            className='form-input'\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.identifier && <p className='error'>Email can not be empty</p>}\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='password' className='form-label'>\r\n            Password*\r\n          </label>\r\n          <input\r\n            type='password'\r\n            name='password'\r\n            className='form-input'\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.password && (\r\n            <p className='error'>Password can not be empty</p>\r\n          )}\r\n        </div>\r\n        <button className='loginBtn'>Sign in</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport './Title.css';\r\n\r\nconst Title = ({ children }) => {\r\n  return (\r\n    <>\r\n      <h1>{children}</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport LoginImg from '../../assets/images/loginImg.png';\r\nimport LoginForm from '../../components/Form/LoginForm';\r\nimport Title from '../../components/Title/Title';\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div className='login-wrapper'>\r\n      <div>\r\n        <Title>Login</Title>\r\n        <LoginForm />\r\n      </div>\r\n      <figure>\r\n        <img src={LoginImg} alt='Login' />\r\n      </figure>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './Main.css';\r\nimport Title from '../../components/Title/Title';\r\nimport MainImg from '../../assets/images/main.png';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Main = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className='main-wrapper'>\r\n      <div className='main-content'>\r\n        <Title>Your movie list is empty</Title>\r\n        <button className='addBtn' onClick={() => history.push('/newMovie')}>\r\n          Create a new movie\r\n        </button>\r\n      </div>\r\n      <figure>\r\n        <img src={MainImg} alt='Main' className='mainImg' />\r\n      </figure>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useMemo, useEffect } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport './Dropzone.css';\r\n\r\nconst baseStyle = {\r\n  width: 329,\r\n  height: 128,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  borderWidth: 2,\r\n  borderStyle: 'dashed',\r\n  borderColor: '#bcbcbc',\r\n  borderRadius: 5,\r\n  marginTop: 12,\r\n  fontStyle: 'normal',\r\n  fontWeight: 'normal',\r\n  fontSize: 18,\r\n  lineHeight: 23,\r\n  color: '#8f8f8f',\r\n  outline: 'none',\r\n  transition: 'border .24s ease-in-out',\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3',\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676',\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744',\r\n};\r\n\r\nfunction Dropzone({ files, setFiles, poster }) {\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    accept: 'image/*',\r\n    noClick: true,\r\n    noKeyboard: true,\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            poster: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject]\r\n  );\r\n\r\n  useEffect(\r\n    () => () => {\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  const thumbs = files.map((file) => (\r\n    <div key={file.name}>\r\n      <img src={file.poster} className='img' alt='preview' />\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div className='imageContainer'>\r\n        {files.length > 0 ? (\r\n          thumbs\r\n        ) : poster ? (\r\n          <img src={poster.url} alt='preview' className='img' />\r\n        ) : null}\r\n      </div>\r\n      <div {...getRootProps({ style })}>\r\n        <input {...getInputProps()} />\r\n        <span>Drop image here</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dropzone;\r\n","import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Form.css';\r\nimport { createMovie } from '../../services/movies';\r\nimport Dropzone from '../Dropzone/Dropzone';\r\n\r\nconst NewMovieForm = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async (data) => {\r\n    const formData = new FormData();\r\n    const stringData = { title: data.title, year: data.year };\r\n    formData.append('data', JSON.stringify(stringData));\r\n    formData.append('files.poster', files[0]);\r\n\r\n    try {\r\n      const createdMovie = await createMovie(\r\n        localStorage.getItem('token'),\r\n        formData\r\n      );\r\n      if (createdMovie) {\r\n        history.push('/movieList');\r\n      } else {\r\n        console.log('Error!');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className='form' onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='form-row'>\r\n          <label htmlFor='title' className='form-label'>\r\n            Title*\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='title'\r\n            className='form-input'\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.title && <p className='error'>Title can not be empty</p>}\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='year' className='form-label'>\r\n            Publication year\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='year'\r\n            className='form-input'\r\n            ref={register}\r\n          />\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='poster' className='form-label'>\r\n            Cover image*\r\n          </label>\r\n          <Dropzone files={files} setFiles={setFiles} />\r\n        </div>\r\n        <div className='buttonsRow'>\r\n          <button className='cancelBtn' onClick={() => history.goBack()}>\r\n            Cancel\r\n          </button>\r\n          <button type='submit' className='submitBtn'>\r\n            Create\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMovieForm;\r\n","import React from 'react';\r\nimport './NewMovie.css';\r\nimport Title from '../../components/Title/Title';\r\nimport NewMovieForm from '../../components/Form/NewMovieForm';\r\nimport NewMovieImg from '../../assets/images/newMovieImg.png';\r\n\r\nconst NewMovie = () => {\r\n  return (\r\n    <div className='newMovie-wrapper'>\r\n      <Title>Create a new movie</Title>\r\n      <NewMovieForm />\r\n      <figure>\r\n        <img src={NewMovieImg} alt='Tree' className='newMovieImg' />\r\n      </figure>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMovie;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './MovieList.css';\r\nimport Title from '../../components/Title/Title';\r\nimport { getMovies, deleteMovie } from '../../services/movies';\r\n\r\nconst MovieList = () => {\r\n  const [movies, setMovies] = useState('');\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    getMovies(localStorage.getItem('token')).then((res) => {\r\n      setMovies(res);\r\n    });\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    deleteMovie(localStorage.getItem('token'), id);\r\n    setMovies(movies.filter((movie) => movie.id !== id));\r\n  };\r\n\r\n  const handleEdit = (movie) => {\r\n    history.push({\r\n      pathname: '/editMovie',\r\n      state: { movie },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='movieList-wrapper'>\r\n      <div className='movieList_header'>\r\n        <Title>Movies</Title>\r\n        <button\r\n          className='movieList_btnNew'\r\n          onClick={() => history.push('/newMovie')}\r\n        >\r\n          Add new<span>&#43;</span>\r\n        </button>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Cover image</th>\r\n            <th>Title</th>\r\n            <th>Publication year</th>\r\n            <th>Options</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {movies &&\r\n            movies.map((movie) => (\r\n              <tr key={movie.id}>\r\n                <td>\r\n                  <img\r\n                    src={movie.poster.url}\r\n                    alt='poster'\r\n                    className='coverImg'\r\n                  />\r\n                </td>\r\n                <td>{movie.title}</td>\r\n                <td>{movie.year}</td>\r\n                <td className='options'>\r\n                  <div className='optionsContainer'>\r\n                    <button\r\n                      className='editBtn'\r\n                      onClick={() => handleEdit(movie)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      className='deleteBtn'\r\n                      onClick={() => handleDelete(movie.id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Form.css';\r\nimport { updateMovie } from '../../services/movies';\r\nimport Dropzone from '../Dropzone/Dropzone';\r\n\r\nconst EditMovieForm = ({ movieData }) => {\r\n  const { id, title, year, poster } = movieData;\r\n  const [data, setData] = useState({\r\n    title: '',\r\n    year: '',\r\n  });\r\n  const [files, setFiles] = useState([]);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setData({\r\n      title,\r\n      year,\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const formData = new FormData();\r\n    const stringData = { title: data.title, year: data.year };\r\n    formData.append('data', JSON.stringify(stringData));\r\n\r\n    // const posterData = files.length > 0 ? files[0] : poster;\r\n    formData.append('files.poster', files[0]);\r\n\r\n    // console.log(...formData);\r\n\r\n    try {\r\n      const updatedMovie = await updateMovie(\r\n        localStorage.getItem('token'),\r\n        id,\r\n        formData\r\n      );\r\n      if (updatedMovie) {\r\n        history.push('/movieList');\r\n      } else {\r\n        console.log('Error!');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className='form' onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='form-row'>\r\n          <label htmlFor='title' className='form-label'>\r\n            Title*\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='title'\r\n            className='form-input'\r\n            value={data.title}\r\n            onChange={handleChange}\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.title && <p className='error'>Title can not be empty</p>}\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='year' className='form-label'>\r\n            Publication year\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='year'\r\n            className='form-input'\r\n            value={data.year}\r\n            onChange={handleChange}\r\n            ref={register}\r\n          />\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='poster' className='form-label'>\r\n            Cover image*\r\n          </label>\r\n          <Dropzone files={files} setFiles={setFiles} poster={poster} />\r\n        </div>\r\n        <div className='buttonsRow'>\r\n          <button\r\n            className='cancelBtn'\r\n            onClick={() => history.push('/movieList')}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button type='submit' className='submitBtn'>\r\n            Update\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditMovieForm;\r\n","import React from 'react';\r\nimport '../NewMovie/NewMovie.css';\r\nimport Title from '../../components/Title/Title';\r\nimport EditMovieForm from '../../components/Form/EditMovieForm';\r\nimport EditMovieImg from '../../assets/images/editMovieImg.png';\r\n\r\nconst EditMovie = (props) => {\r\n  return (\r\n    <div className='newMovie-wrapper'>\r\n      <Title>Edit</Title>\r\n      <EditMovieForm movieData={props.location.state.movie} />\r\n      <figure>\r\n        <img src={EditMovieImg} alt='Edit' className='newMovieImg' />\r\n      </figure>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditMovie;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { AuthContext } from './context/AuthContext';\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\r\n\r\nimport Login from './pages/Login/Login';\r\nimport Main from './pages/Main/Main';\r\nimport NewMovie from './pages/NewMovie/NewMovie';\r\nimport MovieList from './pages/MovieList/MovieList';\r\nimport EditMovie from './pages/EditMovie/EditMovie';\r\n\r\nconst App = () => {\r\n  const { isAuth, setIsAuth } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token') !== null) {\r\n      setIsAuth(true);\r\n    } else {\r\n      setIsAuth(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isAuth === true || isAuth === false ? (\r\n        <>\r\n          <Route exact path='/' component={Login} />\r\n          <PrivateRoute path='/main' component={Main} />\r\n          <PrivateRoute path='/newMovie' component={NewMovie} />\r\n          <PrivateRoute path='/movieList' component={MovieList} />\r\n          <PrivateRoute path='/editMovie' component={EditMovie} />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { AuthProvider } from './context/AuthContext';\r\n\r\nReactDOM.render(\r\n  <AuthProvider>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </AuthProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}